JavaScript es un lenguaje debilmente típado.
Al ser debilmente típado una variable puede ser reasignada con otro tipo de dato al de origen.
var primeraLetraDelNombre = nombre.charAt(0);//Extraer la posición cero del String.
var nombreCompleto =`${nombre} ${apellido.toUpperCase()}`;//Notación para interpolar variables.
var str = nombre.charAt(1,3);//Nos devuelve el substring.
JavaScript por defecto no es tan preciso con los números se le debe especificar el tipo de dato o incluir alguna Biblioteca como Math.
function imprimirEdad(nombre, edad) {//Declaración de función.
   console.log(`${nombre} tiene ${edad} años`);
}
imprimirEdad(25, "Carlos");//Javascript no le encuentra sentido al tipo de datos si no se le específica.
imprimirEdad();//Sin párametros nos deja las variables con valor undefined.
El entorno donde se guardan las variables globales es window.
En Javascript se permite trabajar en ámbito local y global.
//Función para recibir objetos por parametros.
function imprimirNombreEnMayusculas({ nombre }){//Del objeto que se le pase obtiene el atributo nombre.
   console.log(nombre.toUpperCase());//Imprime el nombre en consola.
}
imprimirNombreEnMayusculas({nombre: "Pepito"})//Llamada a función cuando se le pasa el objeto sin declarar una variable.
Un atributo se compone de una clave (key) y un valor (value), que se separan entre sí por dos puntos “”:"". Los valores pueden ser de tipo string, número, booleano, etc. Cada atributo está separado del siguiente por una coma. Un objeto puede tener todos los atributos que sean necesarios.
Escribir el nombre de un objeto separado por un punto del nombre de un atributo, nos permite acceder al valor de dicho atributo para ese objeto. Un objeto también se puede pasar como atributo en una función.
Las últimas versiones de JavaScript nos permiten desglosar el objeto para acceder únicamente al atributo que nos interesa. Esto se consigue encerrando el nombre del atributo entre llaves { }.
var { nombre } = persona;//Desestructra el objeto, creando una variable local nombre que contiene el valor del nombre de la persona.
En JavaScript los objetos que se pasan por párametro son tomados por referenia(a la misma localidad de memoria del objeto).
function sumarEdadEnObjetoNuevo(persona) {//Paso de objeto sin modificar su valor.
   return{
      ...persona,//Crea una copia en memoria del objeto.
      edad: persona.edad + 1//Sobrescribe el valor del atributo edad.
   }
}
Para comparar haciendo una conversión automatica del tipo de dato (para que sean iguales) se usa ==, 4=="4"
Para comparar incluyendo el tipo de dato 4==="4".
Cuando realizamos operaciones es recomendable usar tres símbolos de igual (===). Esto permite que JavasScript no iguale las variables que son de distinto tipo. Te recomendamos que uses el triple igual siempre que estés comparando variables.
Para que un valor no pueda ser modificado una vez despues de ser asignado se usa la palabra reservada const.
Compo buena práctica las constantes se escriben todas en mayúsculas.
const esMayorDeEdad = ({ edad }) => edad >= MAYORIA_DE_EDAD //Declaración de una arrow function en una sola línea.
toFixed(1) //Para fijar cuantos decimales queremos.