
I2C_Libreria.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  00800200  0000033e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000002ca  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  00800200  00800200  0000033e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000033e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000370  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000088  00000000  00000000  000003b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000011c0  00000000  00000000  00000438  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000d05  00000000  00000000  000015f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000006ed  00000000  00000000  000022fd  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000168  00000000  00000000  000029ec  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000006c1  00000000  00000000  00002b54  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000061b  00000000  00000000  00003215  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000090  00000000  00000000  00003830  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	81 c0       	rjmp	.+258    	; 0x108 <__bad_interrupt>
   6:	00 00       	nop
   8:	7f c0       	rjmp	.+254    	; 0x108 <__bad_interrupt>
   a:	00 00       	nop
   c:	7d c0       	rjmp	.+250    	; 0x108 <__bad_interrupt>
   e:	00 00       	nop
  10:	7b c0       	rjmp	.+246    	; 0x108 <__bad_interrupt>
  12:	00 00       	nop
  14:	79 c0       	rjmp	.+242    	; 0x108 <__bad_interrupt>
  16:	00 00       	nop
  18:	77 c0       	rjmp	.+238    	; 0x108 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	75 c0       	rjmp	.+234    	; 0x108 <__bad_interrupt>
  1e:	00 00       	nop
  20:	73 c0       	rjmp	.+230    	; 0x108 <__bad_interrupt>
  22:	00 00       	nop
  24:	71 c0       	rjmp	.+226    	; 0x108 <__bad_interrupt>
  26:	00 00       	nop
  28:	6f c0       	rjmp	.+222    	; 0x108 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	6d c0       	rjmp	.+218    	; 0x108 <__bad_interrupt>
  2e:	00 00       	nop
  30:	6b c0       	rjmp	.+214    	; 0x108 <__bad_interrupt>
  32:	00 00       	nop
  34:	69 c0       	rjmp	.+210    	; 0x108 <__bad_interrupt>
  36:	00 00       	nop
  38:	67 c0       	rjmp	.+206    	; 0x108 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	65 c0       	rjmp	.+202    	; 0x108 <__bad_interrupt>
  3e:	00 00       	nop
  40:	63 c0       	rjmp	.+198    	; 0x108 <__bad_interrupt>
  42:	00 00       	nop
  44:	61 c0       	rjmp	.+194    	; 0x108 <__bad_interrupt>
  46:	00 00       	nop
  48:	5f c0       	rjmp	.+190    	; 0x108 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	5d c0       	rjmp	.+186    	; 0x108 <__bad_interrupt>
  4e:	00 00       	nop
  50:	5b c0       	rjmp	.+182    	; 0x108 <__bad_interrupt>
  52:	00 00       	nop
  54:	59 c0       	rjmp	.+178    	; 0x108 <__bad_interrupt>
  56:	00 00       	nop
  58:	57 c0       	rjmp	.+174    	; 0x108 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	55 c0       	rjmp	.+170    	; 0x108 <__bad_interrupt>
  5e:	00 00       	nop
  60:	53 c0       	rjmp	.+166    	; 0x108 <__bad_interrupt>
  62:	00 00       	nop
  64:	51 c0       	rjmp	.+162    	; 0x108 <__bad_interrupt>
  66:	00 00       	nop
  68:	4f c0       	rjmp	.+158    	; 0x108 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	4d c0       	rjmp	.+154    	; 0x108 <__bad_interrupt>
  6e:	00 00       	nop
  70:	4b c0       	rjmp	.+150    	; 0x108 <__bad_interrupt>
  72:	00 00       	nop
  74:	49 c0       	rjmp	.+146    	; 0x108 <__bad_interrupt>
  76:	00 00       	nop
  78:	47 c0       	rjmp	.+142    	; 0x108 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	45 c0       	rjmp	.+138    	; 0x108 <__bad_interrupt>
  7e:	00 00       	nop
  80:	43 c0       	rjmp	.+134    	; 0x108 <__bad_interrupt>
  82:	00 00       	nop
  84:	41 c0       	rjmp	.+130    	; 0x108 <__bad_interrupt>
  86:	00 00       	nop
  88:	3f c0       	rjmp	.+126    	; 0x108 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	3d c0       	rjmp	.+122    	; 0x108 <__bad_interrupt>
  8e:	00 00       	nop
  90:	3b c0       	rjmp	.+118    	; 0x108 <__bad_interrupt>
  92:	00 00       	nop
  94:	39 c0       	rjmp	.+114    	; 0x108 <__bad_interrupt>
  96:	00 00       	nop
  98:	37 c0       	rjmp	.+110    	; 0x108 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	35 c0       	rjmp	.+106    	; 0x108 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	33 c0       	rjmp	.+102    	; 0x108 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	31 c0       	rjmp	.+98     	; 0x108 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	2f c0       	rjmp	.+94     	; 0x108 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	2d c0       	rjmp	.+90     	; 0x108 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	2b c0       	rjmp	.+86     	; 0x108 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	29 c0       	rjmp	.+82     	; 0x108 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	27 c0       	rjmp	.+78     	; 0x108 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	25 c0       	rjmp	.+74     	; 0x108 <__bad_interrupt>
  be:	00 00       	nop
  c0:	23 c0       	rjmp	.+70     	; 0x108 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	21 c0       	rjmp	.+66     	; 0x108 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	1f c0       	rjmp	.+62     	; 0x108 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	1d c0       	rjmp	.+58     	; 0x108 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	1b c0       	rjmp	.+54     	; 0x108 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	19 c0       	rjmp	.+50     	; 0x108 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	17 c0       	rjmp	.+46     	; 0x108 <__bad_interrupt>
  da:	00 00       	nop
  dc:	15 c0       	rjmp	.+42     	; 0x108 <__bad_interrupt>
  de:	00 00       	nop
  e0:	13 c0       	rjmp	.+38     	; 0x108 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_clear_bss>:
  f4:	22 e0       	ldi	r18, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	01 c0       	rjmp	.+2      	; 0xfe <.do_clear_bss_start>

000000fc <.do_clear_bss_loop>:
  fc:	1d 92       	st	X+, r1

000000fe <.do_clear_bss_start>:
  fe:	a2 30       	cpi	r26, 0x02	; 2
 100:	b2 07       	cpc	r27, r18
 102:	e1 f7       	brne	.-8      	; 0xfc <.do_clear_bss_loop>
 104:	c6 d0       	rcall	.+396    	; 0x292 <main>
 106:	df c0       	rjmp	.+446    	; 0x2c6 <_exit>

00000108 <__bad_interrupt>:
 108:	7b cf       	rjmp	.-266    	; 0x0 <__vectors>

0000010a <Inicializar_I2C>:
		Datos[i] = I2C_LEER_ACK();
	}
	Datos[(longitud-1)] = I2C_LEER_NACK();
	I2C_Parar();
	return 0;
}
 10a:	88 e4       	ldi	r24, 0x48	; 72
 10c:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7000b8>
 110:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
 114:	10 92 bc 00 	sts	0x00BC, r1	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
 118:	08 95       	ret

0000011a <Inicio_I2C_Write>:
 11a:	ec eb       	ldi	r30, 0xBC	; 188
 11c:	f0 e0       	ldi	r31, 0x00	; 0
 11e:	10 82       	st	Z, r1
 120:	90 81       	ld	r25, Z
 122:	94 6a       	ori	r25, 0xA4	; 164
 124:	90 83       	st	Z, r25
 126:	90 81       	ld	r25, Z
 128:	99 23       	and	r25, r25
 12a:	ec f7       	brge	.-6      	; 0x126 <Inicio_I2C_Write+0xc>
 12c:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
 130:	98 7f       	andi	r25, 0xF8	; 248
 132:	98 30       	cpi	r25, 0x08	; 8
 134:	39 f0       	breq	.+14     	; 0x144 <Inicio_I2C_Write+0x2a>
 136:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <_edata>
 13a:	81 60       	ori	r24, 0x01	; 1
 13c:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <_edata>
 140:	81 e0       	ldi	r24, 0x01	; 1
 142:	08 95       	ret
 144:	88 0f       	add	r24, r24
 146:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
 14a:	84 e8       	ldi	r24, 0x84	; 132
 14c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
 150:	ec eb       	ldi	r30, 0xBC	; 188
 152:	f0 e0       	ldi	r31, 0x00	; 0
 154:	80 81       	ld	r24, Z
 156:	88 23       	and	r24, r24
 158:	ec f7       	brge	.-6      	; 0x154 <Inicio_I2C_Write+0x3a>
 15a:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
 15e:	88 7f       	andi	r24, 0xF8	; 248
 160:	88 31       	cpi	r24, 0x18	; 24
 162:	39 f0       	breq	.+14     	; 0x172 <Inicio_I2C_Write+0x58>
 164:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <_edata>
 168:	82 60       	ori	r24, 0x02	; 2
 16a:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <_edata>
 16e:	81 e0       	ldi	r24, 0x01	; 1
 170:	08 95       	ret
 172:	80 e0       	ldi	r24, 0x00	; 0
 174:	08 95       	ret

00000176 <I2C_Escribir>:
 176:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
 17a:	84 e8       	ldi	r24, 0x84	; 132
 17c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
 180:	ec eb       	ldi	r30, 0xBC	; 188
 182:	f0 e0       	ldi	r31, 0x00	; 0
 184:	80 81       	ld	r24, Z
 186:	88 23       	and	r24, r24
 188:	ec f7       	brge	.-6      	; 0x184 <I2C_Escribir+0xe>
 18a:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
 18e:	88 7f       	andi	r24, 0xF8	; 248
 190:	88 32       	cpi	r24, 0x28	; 40
 192:	39 f0       	breq	.+14     	; 0x1a2 <I2C_Escribir+0x2c>
 194:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <_edata>
 198:	84 60       	ori	r24, 0x04	; 4
 19a:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <_edata>
 19e:	81 e0       	ldi	r24, 0x01	; 1
 1a0:	08 95       	ret
 1a2:	80 e0       	ldi	r24, 0x00	; 0
 1a4:	08 95       	ret

000001a6 <I2C_Escribir_Byte>:
 1a6:	cf 93       	push	r28
 1a8:	df 93       	push	r29
 1aa:	d6 2f       	mov	r29, r22
 1ac:	c4 2f       	mov	r28, r20
 1ae:	b5 df       	rcall	.-150    	; 0x11a <Inicio_I2C_Write>
 1b0:	81 11       	cpse	r24, r1
 1b2:	0d c0       	rjmp	.+26     	; 0x1ce <I2C_Escribir_Byte+0x28>
 1b4:	8d 2f       	mov	r24, r29
 1b6:	df df       	rcall	.-66     	; 0x176 <I2C_Escribir>
 1b8:	8c 2f       	mov	r24, r28
 1ba:	dd df       	rcall	.-70     	; 0x176 <I2C_Escribir>
 1bc:	81 11       	cpse	r24, r1
 1be:	09 c0       	rjmp	.+18     	; 0x1d2 <I2C_Escribir_Byte+0x2c>
 1c0:	84 e9       	ldi	r24, 0x94	; 148
 1c2:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
 1c6:	84 e6       	ldi	r24, 0x64	; 100
 1c8:	81 50       	subi	r24, 0x01	; 1
 1ca:	f1 f7       	brne	.-4      	; 0x1c8 <I2C_Escribir_Byte+0x22>
 1cc:	03 c0       	rjmp	.+6      	; 0x1d4 <I2C_Escribir_Byte+0x2e>
 1ce:	81 e0       	ldi	r24, 0x01	; 1
 1d0:	01 c0       	rjmp	.+2      	; 0x1d4 <I2C_Escribir_Byte+0x2e>
 1d2:	81 e0       	ldi	r24, 0x01	; 1
 1d4:	df 91       	pop	r29
 1d6:	cf 91       	pop	r28
 1d8:	08 95       	ret

000001da <Inicio_I2C_Read>:
 1da:	ec eb       	ldi	r30, 0xBC	; 188
 1dc:	f0 e0       	ldi	r31, 0x00	; 0
 1de:	10 82       	st	Z, r1
 1e0:	90 81       	ld	r25, Z
 1e2:	94 6a       	ori	r25, 0xA4	; 164
 1e4:	90 83       	st	Z, r25
 1e6:	90 81       	ld	r25, Z
 1e8:	99 23       	and	r25, r25
 1ea:	ec f7       	brge	.-6      	; 0x1e6 <Inicio_I2C_Read+0xc>
 1ec:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
 1f0:	98 7f       	andi	r25, 0xF8	; 248
 1f2:	98 30       	cpi	r25, 0x08	; 8
 1f4:	a1 f4       	brne	.+40     	; 0x21e <Inicio_I2C_Read+0x44>
 1f6:	88 0f       	add	r24, r24
 1f8:	81 60       	ori	r24, 0x01	; 1
 1fa:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
 1fe:	84 ec       	ldi	r24, 0xC4	; 196
 200:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
 204:	ec eb       	ldi	r30, 0xBC	; 188
 206:	f0 e0       	ldi	r31, 0x00	; 0
 208:	80 81       	ld	r24, Z
 20a:	88 23       	and	r24, r24
 20c:	ec f7       	brge	.-6      	; 0x208 <Inicio_I2C_Read+0x2e>
 20e:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
 212:	98 7f       	andi	r25, 0xF8	; 248
 214:	81 e0       	ldi	r24, 0x01	; 1
 216:	90 34       	cpi	r25, 0x40	; 64
 218:	19 f4       	brne	.+6      	; 0x220 <Inicio_I2C_Read+0x46>
 21a:	80 e0       	ldi	r24, 0x00	; 0
 21c:	08 95       	ret
 21e:	81 e0       	ldi	r24, 0x01	; 1
 220:	08 95       	ret

00000222 <I2C_LEER_NACK>:
 222:	ec eb       	ldi	r30, 0xBC	; 188
 224:	f0 e0       	ldi	r31, 0x00	; 0
 226:	94 e8       	ldi	r25, 0x84	; 132
 228:	a9 eb       	ldi	r26, 0xB9	; 185
 22a:	b0 e0       	ldi	r27, 0x00	; 0
 22c:	28 e0       	ldi	r18, 0x08	; 8
 22e:	90 83       	st	Z, r25
 230:	80 81       	ld	r24, Z
 232:	88 23       	and	r24, r24
 234:	ec f7       	brge	.-6      	; 0x230 <I2C_LEER_NACK+0xe>
 236:	8c 91       	ld	r24, X
 238:	88 7f       	andi	r24, 0xF8	; 248
 23a:	88 35       	cpi	r24, 0x58	; 88
 23c:	19 f0       	breq	.+6      	; 0x244 <I2C_LEER_NACK+0x22>
 23e:	20 93 00 02 	sts	0x0200, r18	; 0x800200 <_edata>
 242:	f5 cf       	rjmp	.-22     	; 0x22e <I2C_LEER_NACK+0xc>
 244:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
 248:	08 95       	ret

0000024a <I2C_Escribir_Direccion>:
 24a:	cf 93       	push	r28
 24c:	df 93       	push	r29
 24e:	d6 2f       	mov	r29, r22
 250:	64 df       	rcall	.-312    	; 0x11a <Inicio_I2C_Write>
 252:	c8 2f       	mov	r28, r24
 254:	81 11       	cpse	r24, r1
 256:	06 c0       	rjmp	.+12     	; 0x264 <I2C_Escribir_Direccion+0x1a>
 258:	8d 2f       	mov	r24, r29
 25a:	8d df       	rcall	.-230    	; 0x176 <I2C_Escribir>
 25c:	84 e9       	ldi	r24, 0x94	; 148
 25e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
 262:	01 c0       	rjmp	.+2      	; 0x266 <I2C_Escribir_Direccion+0x1c>
 264:	c1 e0       	ldi	r28, 0x01	; 1
 266:	8c 2f       	mov	r24, r28
 268:	df 91       	pop	r29
 26a:	cf 91       	pop	r28
 26c:	08 95       	ret

0000026e <I2C_LEER_Byte>:
 26e:	cf 93       	push	r28
 270:	c8 2f       	mov	r28, r24
 272:	eb df       	rcall	.-42     	; 0x24a <I2C_Escribir_Direccion>
 274:	8c 2f       	mov	r24, r28
 276:	b1 df       	rcall	.-158    	; 0x1da <Inicio_I2C_Read>
 278:	81 11       	cpse	r24, r1
 27a:	08 c0       	rjmp	.+16     	; 0x28c <I2C_LEER_Byte+0x1e>
 27c:	d2 df       	rcall	.-92     	; 0x222 <I2C_LEER_NACK>
 27e:	94 e9       	ldi	r25, 0x94	; 148
 280:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
 284:	94 e6       	ldi	r25, 0x64	; 100
 286:	91 50       	subi	r25, 0x01	; 1
 288:	f1 f7       	brne	.-4      	; 0x286 <I2C_LEER_Byte+0x18>
 28a:	01 c0       	rjmp	.+2      	; 0x28e <I2C_LEER_Byte+0x20>
 28c:	81 e0       	ldi	r24, 0x01	; 1
 28e:	cf 91       	pop	r28
 290:	08 95       	ret

00000292 <main>:

uint8_t Error;
int main(void)
{
	uint8_t RTC=0x68;
	DDRD=0x00;
 292:	1a b8       	out	0x0a, r1	; 10
	PORTD=0x03;
 294:	83 e0       	ldi	r24, 0x03	; 3
 296:	8b b9       	out	0x0b, r24	; 11
	DDRA=0xFF;
 298:	8f ef       	ldi	r24, 0xFF	; 255
 29a:	81 b9       	out	0x01, r24	; 1
	Inicializar_I2C();
 29c:	36 df       	rcall	.-404    	; 0x10a <Inicializar_I2C>
	/* Replace with your application code */
	while (1)
	{
		Error=I2C_Escribir_Byte(RTC,0x02,0x07);
 29e:	47 e0       	ldi	r20, 0x07	; 7
 2a0:	62 e0       	ldi	r22, 0x02	; 2
 2a2:	88 e6       	ldi	r24, 0x68	; 104
 2a4:	80 df       	rcall	.-256    	; 0x1a6 <I2C_Escribir_Byte>
 2a6:	80 93 01 02 	sts	0x0201, r24	; 0x800201 <Error>
		PORTA=I2C_LEER_Byte(RTC,00);
 2aa:	60 e0       	ldi	r22, 0x00	; 0
 2ac:	88 e6       	ldi	r24, 0x68	; 104
 2ae:	df df       	rcall	.-66     	; 0x26e <I2C_LEER_Byte>
 2b0:	82 b9       	out	0x02, r24	; 2
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2b2:	2f ef       	ldi	r18, 0xFF	; 255
 2b4:	81 ee       	ldi	r24, 0xE1	; 225
 2b6:	94 e0       	ldi	r25, 0x04	; 4
 2b8:	21 50       	subi	r18, 0x01	; 1
 2ba:	80 40       	sbci	r24, 0x00	; 0
 2bc:	90 40       	sbci	r25, 0x00	; 0
 2be:	e1 f7       	brne	.-8      	; 0x2b8 <main+0x26>
 2c0:	00 c0       	rjmp	.+0      	; 0x2c2 <main+0x30>
 2c2:	00 00       	nop
 2c4:	ec cf       	rjmp	.-40     	; 0x29e <main+0xc>

000002c6 <_exit>:
 2c6:	f8 94       	cli

000002c8 <__stop_program>:
 2c8:	ff cf       	rjmp	.-2      	; 0x2c8 <__stop_program>
