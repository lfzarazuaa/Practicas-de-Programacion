
Teclado_Matricial.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000188  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000002  00800060  00000188  000001fc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000001fe  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000230  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000058  00000000  00000000  0000026c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000096b  00000000  00000000  000002c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000006aa  00000000  00000000  00000c2f  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000003e8  00000000  00000000  000012d9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000094  00000000  00000000  000016c4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000420  00000000  00000000  00001758  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000001cc  00000000  00000000  00001b78  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000048  00000000  00000000  00001d44  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e8 e8       	ldi	r30, 0x88	; 136
  68:	f1 e0       	ldi	r31, 0x01	; 1
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a2 36       	cpi	r26, 0x62	; 98
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a2 e6       	ldi	r26, 0x62	; 98
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a2 36       	cpi	r26, 0x62	; 98
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 b2 00 	call	0x164	; 0x164 <main>
  8a:	0c 94 c2 00 	jmp	0x184	; 0x184 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <Inicializar_Teclado>:
void Leer_Direccion_EEPROM(void){//LEER
	PORTC=EEPROM_read(PINB);
}

void Escribir_Dato_EEPROM(void){//Escribir
	EEPROM_write(PINB,PINA);
  92:	80 ef       	ldi	r24, 0xF0	; 240
  94:	81 bb       	out	0x11, r24	; 17
  96:	8f ef       	ldi	r24, 0xFF	; 255
  98:	82 bb       	out	0x12, r24	; 18
  9a:	08 95       	ret

0000009c <Detectar_Tecla>:
  9c:	90 b3       	in	r25, 0x10	; 16
  9e:	9f 70       	andi	r25, 0x0F	; 15
  a0:	9e 30       	cpi	r25, 0x0E	; 14
  a2:	19 f4       	brne	.+6      	; 0xaa <Detectar_Tecla+0xe>
  a4:	20 93 60 00 	sts	0x0060, r18	; 0x800060 <Tecla_Presionada>
  a8:	12 c0       	rjmp	.+36     	; 0xce <Detectar_Tecla+0x32>
  aa:	9d 30       	cpi	r25, 0x0D	; 13
  ac:	19 f4       	brne	.+6      	; 0xb4 <Detectar_Tecla+0x18>
  ae:	40 93 60 00 	sts	0x0060, r20	; 0x800060 <Tecla_Presionada>
  b2:	0d c0       	rjmp	.+26     	; 0xce <Detectar_Tecla+0x32>
  b4:	9b 30       	cpi	r25, 0x0B	; 11
  b6:	19 f4       	brne	.+6      	; 0xbe <Detectar_Tecla+0x22>
  b8:	60 93 60 00 	sts	0x0060, r22	; 0x800060 <Tecla_Presionada>
  bc:	08 c0       	rjmp	.+16     	; 0xce <Detectar_Tecla+0x32>
  be:	97 30       	cpi	r25, 0x07	; 7
  c0:	21 f0       	breq	.+8      	; 0xca <Detectar_Tecla+0x2e>
  c2:	8b ee       	ldi	r24, 0xEB	; 235
  c4:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <Tecla_Presionada>
  c8:	02 c0       	rjmp	.+4      	; 0xce <Detectar_Tecla+0x32>
  ca:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <Tecla_Presionada>
  ce:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <Tecla_Presionada>
  d2:	08 95       	ret

000000d4 <Obtener_Tecla>:
  d4:	8f e0       	ldi	r24, 0x0F	; 15
  d6:	82 bb       	out	0x12, r24	; 18
  d8:	80 b3       	in	r24, 0x10	; 16
  da:	8f 70       	andi	r24, 0x0F	; 15
  dc:	8f 30       	cpi	r24, 0x0F	; 15
  de:	08 f0       	brcs	.+2      	; 0xe2 <Obtener_Tecla+0xe>
  e0:	3f c0       	rjmp	.+126    	; 0x160 <Obtener_Tecla+0x8c>
  e2:	8f e7       	ldi	r24, 0x7F	; 127
  e4:	82 bb       	out	0x12, r24	; 18
  e6:	89 ef       	ldi	r24, 0xF9	; 249
  e8:	90 e0       	ldi	r25, 0x00	; 0
  ea:	01 97       	sbiw	r24, 0x01	; 1
  ec:	f1 f7       	brne	.-4      	; 0xea <Obtener_Tecla+0x16>
  ee:	00 c0       	rjmp	.+0      	; 0xf0 <Obtener_Tecla+0x1c>
  f0:	00 00       	nop
  f2:	21 e4       	ldi	r18, 0x41	; 65
  f4:	43 e3       	ldi	r20, 0x33	; 51
  f6:	62 e3       	ldi	r22, 0x32	; 50
  f8:	81 e3       	ldi	r24, 0x31	; 49
  fa:	0e 94 4e 00 	call	0x9c	; 0x9c <Detectar_Tecla>
  fe:	8b 3e       	cpi	r24, 0xEB	; 235
 100:	81 f5       	brne	.+96     	; 0x162 <Obtener_Tecla+0x8e>
 102:	8f eb       	ldi	r24, 0xBF	; 191
 104:	82 bb       	out	0x12, r24	; 18
 106:	89 ef       	ldi	r24, 0xF9	; 249
 108:	90 e0       	ldi	r25, 0x00	; 0
 10a:	01 97       	sbiw	r24, 0x01	; 1
 10c:	f1 f7       	brne	.-4      	; 0x10a <Obtener_Tecla+0x36>
 10e:	00 c0       	rjmp	.+0      	; 0x110 <Obtener_Tecla+0x3c>
 110:	00 00       	nop
 112:	22 e4       	ldi	r18, 0x42	; 66
 114:	46 e3       	ldi	r20, 0x36	; 54
 116:	65 e3       	ldi	r22, 0x35	; 53
 118:	84 e3       	ldi	r24, 0x34	; 52
 11a:	0e 94 4e 00 	call	0x9c	; 0x9c <Detectar_Tecla>
 11e:	8b 3e       	cpi	r24, 0xEB	; 235
 120:	01 f5       	brne	.+64     	; 0x162 <Obtener_Tecla+0x8e>
 122:	8f ed       	ldi	r24, 0xDF	; 223
 124:	82 bb       	out	0x12, r24	; 18
 126:	89 ef       	ldi	r24, 0xF9	; 249
 128:	90 e0       	ldi	r25, 0x00	; 0
 12a:	01 97       	sbiw	r24, 0x01	; 1
 12c:	f1 f7       	brne	.-4      	; 0x12a <Obtener_Tecla+0x56>
 12e:	00 c0       	rjmp	.+0      	; 0x130 <Obtener_Tecla+0x5c>
 130:	00 00       	nop
 132:	23 e4       	ldi	r18, 0x43	; 67
 134:	49 e3       	ldi	r20, 0x39	; 57
 136:	68 e3       	ldi	r22, 0x38	; 56
 138:	87 e3       	ldi	r24, 0x37	; 55
 13a:	0e 94 4e 00 	call	0x9c	; 0x9c <Detectar_Tecla>
 13e:	8b 3e       	cpi	r24, 0xEB	; 235
 140:	81 f4       	brne	.+32     	; 0x162 <Obtener_Tecla+0x8e>
 142:	8f ee       	ldi	r24, 0xEF	; 239
 144:	82 bb       	out	0x12, r24	; 18
 146:	89 ef       	ldi	r24, 0xF9	; 249
 148:	90 e0       	ldi	r25, 0x00	; 0
 14a:	01 97       	sbiw	r24, 0x01	; 1
 14c:	f1 f7       	brne	.-4      	; 0x14a <Obtener_Tecla+0x76>
 14e:	00 c0       	rjmp	.+0      	; 0x150 <Obtener_Tecla+0x7c>
 150:	00 00       	nop
 152:	24 e4       	ldi	r18, 0x44	; 68
 154:	43 e2       	ldi	r20, 0x23	; 35
 156:	60 e3       	ldi	r22, 0x30	; 48
 158:	8a e2       	ldi	r24, 0x2A	; 42
 15a:	0e 94 4e 00 	call	0x9c	; 0x9c <Detectar_Tecla>
 15e:	08 95       	ret
 160:	8b ee       	ldi	r24, 0xEB	; 235
 162:	08 95       	ret

00000164 <main>:
}

int main(void)
{
	//uint8_t Tec;
	cli();
 164:	f8 94       	cli
	DDRA=0xFF;
 166:	8f ef       	ldi	r24, 0xFF	; 255
 168:	8a bb       	out	0x1a, r24	; 26
	Inicializar_Teclado();
 16a:	0e 94 49 00 	call	0x92	; 0x92 <Inicializar_Teclado>
	//Habilitar la interrupción global
	sei();
 16e:	78 94       	sei
	/* Replace with your application code */
	while (1)
	{
		PORTA=Obtener_Tecla();
 170:	0e 94 6a 00 	call	0xd4	; 0xd4 <Obtener_Tecla>
 174:	8b bb       	out	0x1b, r24	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 176:	89 ef       	ldi	r24, 0xF9	; 249
 178:	90 e0       	ldi	r25, 0x00	; 0
 17a:	01 97       	sbiw	r24, 0x01	; 1
 17c:	f1 f7       	brne	.-4      	; 0x17a <main+0x16>
 17e:	00 c0       	rjmp	.+0      	; 0x180 <main+0x1c>
 180:	00 00       	nop
 182:	f6 cf       	rjmp	.-20     	; 0x170 <main+0xc>

00000184 <_exit>:
 184:	f8 94       	cli

00000186 <__stop_program>:
 186:	ff cf       	rjmp	.-2      	; 0x186 <__stop_program>
