
EEPROM6.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000170  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .bss          00000001  00800060  00800060  00000204  2**0
                  ALLOC
  2 .eeprom       00000002  00810000  00810000  00000204  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .comment      00000030  00000000  00000000  00000206  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000090  00000000  00000000  00000236  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000889  00000000  00000000  000002c6  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000001d3  00000000  00000000  00000b4f  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000350  00000000  00000000  00000d22  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000110  00000000  00000000  00001074  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003c1  00000000  00000000  00001184  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000280  00000000  00000000  00001545  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000080  00000000  00000000  000017c5  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   8:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  2c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	20 e0       	ldi	r18, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	a1 36       	cpi	r26, 0x61	; 97
  6c:	b2 07       	cpc	r27, r18
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 8c 00 	call	0x118	; 0x118 <main>
  74:	0c 94 b6 00 	jmp	0x16c	; 0x16c <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <_Z11LEER_EEPROMv>:
}

void LEER_EEPROM()
{
	//*direccion = PINA;
	dato = eeprom_read_byte((uint8_t*)PINA);
  7c:	89 b3       	in	r24, 0x19	; 25
  7e:	90 e0       	ldi	r25, 0x00	; 0
  80:	0e 94 a1 00 	call	0x142	; 0x142 <__eerd_byte_m16>
  84:	80 93 60 00 	sts	0x0060, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  88:	2f e3       	ldi	r18, 0x3F	; 63
  8a:	8d e0       	ldi	r24, 0x0D	; 13
  8c:	93 e0       	ldi	r25, 0x03	; 3
  8e:	21 50       	subi	r18, 0x01	; 1
  90:	80 40       	sbci	r24, 0x00	; 0
  92:	90 40       	sbci	r25, 0x00	; 0
  94:	e1 f7       	brne	.-8      	; 0x8e <_Z11LEER_EEPROMv+0x12>
  96:	00 c0       	rjmp	.+0      	; 0x98 <_Z11LEER_EEPROMv+0x1c>
  98:	00 00       	nop
	_delay_ms(1000);
	PORTB = dato;
  9a:	80 91 60 00 	lds	r24, 0x0060
  9e:	88 bb       	out	0x18, r24	; 24
  a0:	2f e3       	ldi	r18, 0x3F	; 63
  a2:	8d e0       	ldi	r24, 0x0D	; 13
  a4:	93 e0       	ldi	r25, 0x03	; 3
  a6:	21 50       	subi	r18, 0x01	; 1
  a8:	80 40       	sbci	r24, 0x00	; 0
  aa:	90 40       	sbci	r25, 0x00	; 0
  ac:	e1 f7       	brne	.-8      	; 0xa6 <_Z11LEER_EEPROMv+0x2a>
  ae:	00 c0       	rjmp	.+0      	; 0xb0 <_Z11LEER_EEPROMv+0x34>
  b0:	00 00       	nop
  b2:	08 95       	ret

000000b4 <_Z15ESCRIBIR_EEPROMv>:
}

void ESCRIBIR_EEPROM()
{
	//*direccion = PINA;
	dato = PIND;
  b4:	60 b3       	in	r22, 0x10	; 16
  b6:	60 93 60 00 	sts	0x0060, r22
	eeprom_write_byte((uint8_t*)PINA,dato);
  ba:	89 b3       	in	r24, 0x19	; 25
  bc:	90 e0       	ldi	r25, 0x00	; 0
  be:	0e 94 a9 00 	call	0x152	; 0x152 <__eewr_byte_m16>
  c2:	2f e3       	ldi	r18, 0x3F	; 63
  c4:	8d e0       	ldi	r24, 0x0D	; 13
  c6:	93 e0       	ldi	r25, 0x03	; 3
  c8:	21 50       	subi	r18, 0x01	; 1
  ca:	80 40       	sbci	r24, 0x00	; 0
  cc:	90 40       	sbci	r25, 0x00	; 0
  ce:	e1 f7       	brne	.-8      	; 0xc8 <_Z15ESCRIBIR_EEPROMv+0x14>
  d0:	00 c0       	rjmp	.+0      	; 0xd2 <_Z15ESCRIBIR_EEPROMv+0x1e>
  d2:	00 00       	nop
	_delay_ms(1000);
	PORTB = EEDR;
  d4:	8d b3       	in	r24, 0x1d	; 29
  d6:	88 bb       	out	0x18, r24	; 24
  d8:	2f e3       	ldi	r18, 0x3F	; 63
  da:	8d e0       	ldi	r24, 0x0D	; 13
  dc:	93 e0       	ldi	r25, 0x03	; 3
  de:	21 50       	subi	r18, 0x01	; 1
  e0:	80 40       	sbci	r24, 0x00	; 0
  e2:	90 40       	sbci	r25, 0x00	; 0
  e4:	e1 f7       	brne	.-8      	; 0xde <_Z15ESCRIBIR_EEPROMv+0x2a>
  e6:	00 c0       	rjmp	.+0      	; 0xe8 <_Z15ESCRIBIR_EEPROMv+0x34>
  e8:	00 00       	nop
	_delay_ms(1000);
	PORTB = EEAR;
  ea:	8e b3       	in	r24, 0x1e	; 30
  ec:	9f b3       	in	r25, 0x1f	; 31
  ee:	88 bb       	out	0x18, r24	; 24
  f0:	2f e3       	ldi	r18, 0x3F	; 63
  f2:	8d e0       	ldi	r24, 0x0D	; 13
  f4:	93 e0       	ldi	r25, 0x03	; 3
  f6:	21 50       	subi	r18, 0x01	; 1
  f8:	80 40       	sbci	r24, 0x00	; 0
  fa:	90 40       	sbci	r25, 0x00	; 0
  fc:	e1 f7       	brne	.-8      	; 0xf6 <_Z15ESCRIBIR_EEPROMv+0x42>
  fe:	00 c0       	rjmp	.+0      	; 0x100 <_Z15ESCRIBIR_EEPROMv+0x4c>
 100:	00 00       	nop
	_delay_ms(1000);
	PORTB = 0x00;
 102:	18 ba       	out	0x18, r1	; 24
 104:	2f e3       	ldi	r18, 0x3F	; 63
 106:	8d e0       	ldi	r24, 0x0D	; 13
 108:	93 e0       	ldi	r25, 0x03	; 3
 10a:	21 50       	subi	r18, 0x01	; 1
 10c:	80 40       	sbci	r24, 0x00	; 0
 10e:	90 40       	sbci	r25, 0x00	; 0
 110:	e1 f7       	brne	.-8      	; 0x10a <_Z15ESCRIBIR_EEPROMv+0x56>
 112:	00 c0       	rjmp	.+0      	; 0x114 <_Z15ESCRIBIR_EEPROMv+0x60>
 114:	00 00       	nop
 116:	08 95       	ret

00000118 <main>:
void ESCRIBIR_EEPROM();

int main(void)
{
	short int indice;
	DDRA = 0X00;
 118:	1a ba       	out	0x1a, r1	; 26
	PORTA = 0XFF;
 11a:	8f ef       	ldi	r24, 0xFF	; 255
 11c:	8b bb       	out	0x1b, r24	; 27
	
	DDRC = 0X00;
 11e:	14 ba       	out	0x14, r1	; 20
	PORTC = 0XFF;
 120:	85 bb       	out	0x15, r24	; 21
	
	DDRB = 0XFF;
 122:	87 bb       	out	0x17, r24	; 23
	
	DDRD=0x00;
 124:	11 ba       	out	0x11, r1	; 17
	PORTD = 0XFF;
 126:	82 bb       	out	0x12, r24	; 18

	while(1)
	{
		indice = PINC & 0x03;
 128:	83 b3       	in	r24, 0x13	; 19
 12a:	83 70       	andi	r24, 0x03	; 3
		switch(indice)
 12c:	81 30       	cpi	r24, 0x01	; 1
 12e:	19 f0       	breq	.+6      	; 0x136 <main+0x1e>
 130:	82 30       	cpi	r24, 0x02	; 2
 132:	21 f0       	breq	.+8      	; 0x13c <main+0x24>
 134:	f9 cf       	rjmp	.-14     	; 0x128 <main+0x10>
		{
			case 1:
			LEER_EEPROM();
 136:	0e 94 3e 00 	call	0x7c	; 0x7c <_Z11LEER_EEPROMv>
			break;
 13a:	f6 cf       	rjmp	.-20     	; 0x128 <main+0x10>
			
			case 2:
			ESCRIBIR_EEPROM();
 13c:	0e 94 5a 00 	call	0xb4	; 0xb4 <_Z15ESCRIBIR_EEPROMv>
			break;
 140:	f3 cf       	rjmp	.-26     	; 0x128 <main+0x10>

00000142 <__eerd_byte_m16>:
 142:	e1 99       	sbic	0x1c, 1	; 28
 144:	fe cf       	rjmp	.-4      	; 0x142 <__eerd_byte_m16>
 146:	9f bb       	out	0x1f, r25	; 31
 148:	8e bb       	out	0x1e, r24	; 30
 14a:	e0 9a       	sbi	0x1c, 0	; 28
 14c:	99 27       	eor	r25, r25
 14e:	8d b3       	in	r24, 0x1d	; 29
 150:	08 95       	ret

00000152 <__eewr_byte_m16>:
 152:	26 2f       	mov	r18, r22

00000154 <__eewr_r18_m16>:
 154:	e1 99       	sbic	0x1c, 1	; 28
 156:	fe cf       	rjmp	.-4      	; 0x154 <__eewr_r18_m16>
 158:	9f bb       	out	0x1f, r25	; 31
 15a:	8e bb       	out	0x1e, r24	; 30
 15c:	2d bb       	out	0x1d, r18	; 29
 15e:	0f b6       	in	r0, 0x3f	; 63
 160:	f8 94       	cli
 162:	e2 9a       	sbi	0x1c, 2	; 28
 164:	e1 9a       	sbi	0x1c, 1	; 28
 166:	0f be       	out	0x3f, r0	; 63
 168:	01 96       	adiw	r24, 0x01	; 1
 16a:	08 95       	ret

0000016c <_exit>:
 16c:	f8 94       	cli

0000016e <__stop_program>:
 16e:	ff cf       	rjmp	.-2      	; 0x16e <__stop_program>
