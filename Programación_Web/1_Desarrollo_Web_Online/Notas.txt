Dev Ops Developer operation y servidores.
html Hypertex Markup Language Lenguaje de marcado para hacer websites.
CSS Cascade Sytle Sheet (Diseño hecho código).
JavaScript Lenguaje de programación de programación.
Stack Tecnologias que vas dominando.
Desarrollo_We->Responsive->CSS_Grid_Layout->Animaciones->PostCSS->jQuery a JavaScript->
Fundamentos_de_JS->Webpack->React.js->Redux->React_Router.
En github se puede subir un html para poderlo visualizar en la red.
https://leonidasesteban.github.io/desarrollo-web-2018-preview/
En VS Code en la esquina inferior derecha se puede configuar que tipo de archivo va a leer para que muestre sugerencias pertinentes al lenguaje usado.
Con html:5 en VS Code genera el mimino para trabajar con un html.
En Vs Code con renderWhiteSpace (en settings) se pueden ver los espacios en blanco con puntos.
Una página web se recomienda dividir en secciones.
alt+shift+LineaAbajo%%Duplicar linea en visual studio code.
Se tienen que dividir las secciones que tiene el website para codificarlas parte por parte.
Document Object Mode(DOM)-Modelo de documento que se carga en el navegador web y que representa el documento como un árbol de nodos.
Dependiendo de la complejidad de la página web el DOM podrá agrandarse mas en numero de objetos.
En un hosting de archivos estáticos es donde se almacen los archivos del sitio web.
<br>Salto</br> Realiza 1 salto de linea por cada br.
Etiquetas de HTML (html5doctor.com/ para consultar información sobre las etiquetas).
<nombre>contenido</nombre>%%Sintaxis de etiqueta.
<nombre sr/>Etiqueta con cierre en si misma.
<header></header>%%Encabezado de la página web.
<section></section>%%Divide en secciones nuestra página.
<footer></footer>%%Coloca el pie de página.
<nav></nav>Etiqueta para secciones con links dentro de ella.
<aside></aside>//Etiqueta para contendio no relevante a la página(anuncio).
<ol></ol>%%Listas ordenadas.
<ul></ul>%%Lista desordenada.
<li></li>%%Elemento de lista.
<a href=""></a>%%Poner hipervinculos a viene de ancla o anchor.
<h1></h1>%%Colocar primer nivel de títulos.
<br/>  Salto de línea.
</small> hace un poco mas chico el texto.
Atributos en html
alt="valorAtributo"%%Texto alternativo cuando no cargo la imagen.
src="https://media.licdn.com/dms/image/C5603AQEzaLRFm33GBA/profile-displayphoto-shrink_200_200/0?e=1580342400&v=beta&t=ra-qS31HY_v85a4FaishCOfTJSzP0RAOdms6JGjORc8"%%Imagen usando un link web.
src="images/logo.jpg"%%Dentro de la carpeta.
src="../images/logo.jpg"%%De la carpeta anterior.
<html lang=es> %%Reconoce el idioma español.
<meta http-equiv="Content-Type" content="text/html;charset=UTF-8">%%Reconoce caracteres con acento y demás en mas navegadores.
width="250" height="300"%%Dan ancho y largo respectivamente.
<form action=""> </form>%%Crea un formulario y en action se específica a donde será enviada la información.
<input type="submit" value="texto del botón"> texto con botón.
<label for="email">Déjame tu e-mail.</label>%%Label que hace referencia al objeto email.
<input type="text", placeholder="Dejános tu e-mail." id="email">%%Con placeholder se puede escribir un texto guia.
<input type="checkbox", placeholder="Dejános tu e-mail." id="email">%%Conel checkbox y un for tambien cambia a marcado o desmarcado.
<input type="text">%%Hay varios tipos de input.
<a href="#portafolio">Portafolio</a>  <section id="portafolio"> %%Enlace interno denominado por # (Redirecciona por GET).
<section id="portafolio"> Con el id del elemento se hace referencia con #portafolio.
<a href="./Portafolio/portafolio.html">%%Ruta relativa a la carpeta.
<a href="https://www.youtube.com/watch?v=33_XDodUHAQ&t=394s" target="_blank">Ver proyecto funcionando</a>%%Abrir enlace en otra página.
<header style="color:red; background: blue;">%%Estilos en línea (in-line).
<link rel="stylesheet" href="css/estilos.css"> Para llamar un estilo.
<style> /* Declaración de los atributos de un estilo */
    body {
        background: wheat; justify-content: center;
    }
</style>
href indica a donde acceder para recopilar la información.
Un estilo en cascada se llama asi por su nivel de prioridad.
Pueden haber estilos dentro del html en el header, en la linea o desde un archivo.
Es preferible usar un estilo en un archivo css para mejorar la legibilidad y marcar una diferencia entre la estructura y los estilos.
Un style in line tiene mas peso que uno externo.
Un style dentro del html tiene menos peso que uno in line.
Estilo en cascada porque van en forma de cascada de agua tiene prioridad el ultimo elemento.
%%!important para darle mas prioridad que otros pero rompe la cascada.
Selectores de css%%Los selectores son la forma de indentificar a uno o más elementos dentro del html.
Selector descendente es un elemento hijo dentro de algún otro elemento. /* body header div nav ol li a */
Selector de clase para tomar al objeto deseado.
Muchos elementos pueden recibir el mismo estilo por medio de la duplicación de clases.
Los elementos de Id son unicos dentro del website.
Los id no son muy utilizados en css.
Por semántica se usan varios tags en html para diferenciar partes del documento aunque se vean iguales.
Usar solo un id en un html pero varios class en el mismo html para que tengan el mismo estilo.
User agent stylesheet es el encargado de los estilos default en cada navegador web.
Wrapper o Container para identificar contenedores.
<figure class="project-imageContainer"><!-- Contenedor de imagen con clase project-image. -->
    <img class="project-image" width="500" src="images/platzi-video-react-native.png" alt="Proyecto del curso de React Native.">
</figure>
El pixel es la mínima unidad homogenea de color en una imagen.
El color en html se representa con #FFFFFF donde el byte mas significativo es el rojo, luego verde y el menos significativo el azul.
Developer tools (Inspector de elementos html), con F12 se abre el inspector de elementos.
Al hacer click sobre el elemento y se seleccionar inspeccionar se puede ver el html y sus propiedades, ademas se puede editar el texto del contenido.
En la esquina superior izquierda hay un icono de celular con el cual se accede modo responsive design.
Con la propiedad texto-decoration se pone o quita el subrayado a los links.
Antes de tipos de display.
Los tipos de texto, también conocidos como tipos de letras o fuentes, son el conjunto de diseños tipográficos que representan a cada una de las letras y los caracteres gráficos en el documento. Su nombre correcto es tipografía. Los diferentes tipos de fuente están basados en archivos que existen en cada sistema operativo.
CSS permite utilizar fuentes diferentes a las disponibles en el sistema operativo del cliente, mediante la importación o el enlace a archivos de fuentes externas. Las más usadas son las que están disponibles a través del sitio web de Google Fonts.
Al definir el tipo de texto asociado a una clase css con la propioedad font-family indicamos al navegador, que debe intentar usar esa fuente en particular para darle la apariencia tipográfica a los textos de ese elemento html.
Si no hay una fuente para nuestro sistema se puede incluir una externa por ejemplo desde Google Fonts.
h1,h2,h3,h4,h5,h6 {/*Selector de etiqueta para los distintos headers.*/}
Para colocar todo en mayúsculas es mejor hacerlo desde el css antes del html para mejorar su busqueda y legibilidad.
font-family: define el tipo de fuente aplicado al texto.
color: define el colore del texto.
line-height: define la altura desde la base del texto hasta la base de la siguiente línea de texto.
font-size: define el tamaño del texto, admite cualquiera de las unidades de medida disponibles.
letter-spacing: define el espaciado entre las letras del texto.
font-weight: define el ““peso”” de la letra, negrita, normal, light y normalmente se indica en múltiplos de 100 o usando keywords.
text-decoration: define el decorado del texto como subrayado, tachado, con subrayado superior, etc.
text-transform: permite transformar el estado de mayúsculas / minúsculas en el texto, usando uppercase para mayúsculas sostenidas, lowercase para minúsculas sostenidas, etc.
font-family: 'Fjalla One', Times, serif;/*Cambia letra para los elementos tiene prioridad sobre el elemento padre.*/
font-weight: 400;/*Peso de negritas 600 es negritas 400 es normal
font-style: italic; Tipo de fuente cursiva.
font-size: 40px;/*Tamaño de la letra.
line-height: 1.5;/* Interlineado, debe ser al menos del tamaño de la fuente en px, 150%.
letter-spacing: -2px;/* Sepración entre letras.
text-transform: uppercase;/*Hace la transformación del texto en mayúsculas.
text-decoration: underline;/* Subraya el texto.
Div se utiliza como una división solo para diferenciar entre estilos.
Con alt+teclaDireccional se mueve el contendio seleccionado.
Con el height y weight se pueden traslapar los elementos.
border-top: 10px solid red;/*Dibuja un borde en la parte indicada tamaño tipo estilo;
border-right: 10px solid green;/*Dibuja un borde en la parte indicada tamaño tipo estilo;
border-left: 10px solid orange;/*Dibuja un borde en la parte indicada tamaño tipo estilo;
border-bottom: 10px solid pink;/*Dibuja un borde en la parte indicada tamaño tipo estilo;
border-top-color: red;/* Define el color del borde en la parte superior. */
border-top-width: red;/* Define el ancho del borde en la parte superior. */
border-top-style: red;/* Define el estilo del borde en la parte superior. */
border-color: red;/* Define el color del borde. */
border-width: 15px;/* Ancho del borde, sin este no se puede definir el borde. */
border-style: solid;/* Tipo de borde (solid, dashed, doted, none, initial).Se pueden consultar inspeccionando y editanto el elemento.*/
Si no se define algun color de borde toma por defecto el color del texto. CurrentColor.
Con la propiedad boder-radius se define el redondeado de las esquinas de los bordes.
border-radius: 10px;/* Define un redondeo del borde a 10px. */
border-top-left-radius: 50px;/* Define un redondeo del borde superior izquierdo a 50px. Sobrescribiendo los bordes ya definidos si los hay.*/
El margen es el espacio de separación entre 2 elementos.
En Css los objetos tienen margen por defecto y cada se queda el margen mas grande entre los objetos colindantes Margin Colapsin.
Los margenes sirven tambien para un diseño responsivo, por ejemplo para evitar que se junten una imagen y un texto.
margin: 100px 150px 70px 30px;/* Define el margen en top right bottom left. */
margin: 100px 30px;/* Define el margen en (top bottom) (rightleft). */
margin: 0 auto;/* Define el margen en (top bottom) (rightleft) para centrarse. */
margin-bottom: 10px;/* Crea un margen a 10 pixeles solo abajo (Se puede aplicar left bottom y top).*/
Así como el margen separa a los elementos html entre sí, la propiedad padding de relleno, permite definir una separación entre el contenido interno y el borde de un elemento.
Al inspeccionar los elementos html en el navegador, se puede apreciar el margin con color naranja y el padding con color verde.
Una forma de identificar cuándo es mejor usar margin o padding en un elemento, es evaluando la necesidad de usar borde o background, ya que son éstos: el borde y el background, los que realmente diferencian el uso de uno u otro.
El background al rellenar de color tambien nos muestra los bordes y ahi es donde se aprecía cuanto queremos de margin o de padding.header
El modelo de caja es un concepto teórico de css que representa a cada elemento html en base sus propiedades de: margin, border, padding y dimensiones (alto y ancho).
Para visualizar un elemento html en su representación como modelo de caja debemos irnos a la parte baja de la sección styles del inspector de elementos, o en la sección llamada Computed.
En el modelo de caja, el ancho total de un elemento html equivale a la sumatoria de los valores de: width, padding-left, padding-right, border-left-width, border-right-width. De manera similar aplica para el alto total de cada elemento. Aunque margin-left y margin-right, forman parte del modelo de caja, no se incluyen para el calculo del ancho total.
Con la propiedad box-sizing, y en particular con el valor border-box de esta propiedad, podemos modificar el comportamiento del modelo de caja para que nuestro elemento nunca supere el tamaño máximo que le hayamos definido en width y height. Esta es la opción recomendada para trabajar.
box-sizing: border-box;/* Impide que la caja crezca de tamaño mas alla de lo permitido por height y width. */
Todos los elementos tienen un tag display.
display: none Hace que no se vea en pantalla.
display: block Un elemento puede ocupar todo el ancho en específico.
display: inline Permite que un elemento al costado se pueda mostrar si le queda espacio de texto (no respeta width).
display: inline-block Permite mostrar un elemento al costado(si lo hay y si hay espacio), pero respentando el width.
Los elementos li por defecto son display:inline.
display: block: El elemento intenta abarcar todo el ancho posible.
display: inline: Reduce su tamaño exclusivamente hasta lo que abarca su contenido, descartando las propiedades width y height.
display: inline-block: Combina lo mejor de block e inline, ya que respeta las dimensiones indicadas en las propiedades width y height, pero coloca el elemento en línea (al costado) de elementos hermanos que también tengan display: inline o inline-block.
display: flex: Asume algunas propiedades por defecto que favorecen la alineación de los elementos internos.
display: grid: Similar a flex, asume algunas propiedades por defecto organizando los contenidos en filas y columnas.
display: none: Oculta el elemento.
Flexbox se refiere al tipo de display en css que permite un manejo flexible de la alineación, dimensionamiento y distribución de elementos html.
Esta propiedad se aplica a un elemento padre, pero va a afectar principalmente a sus elementos hijos directos. Por defecto, los elementos internos quedan alineados unos seguidos de los otros. El comportamiento del modelo de caja de estos elementos hijos también se ha modificado, ya que pierden el efecto de su propiedad margin.
Los elementos hijos de un padre con propiedad display: flex tienen a su disposición algunas nuevas propiedades que aportan mayor flexibilidad a su comportamiento. Una de estas propiedades es flex-shrink que, junto a la propiedad flex-wrap del padre, permite adaptar y distribuir los elementos de manera dinámica en el espacio horizontal disponible hasta ocupar todo el espacio, y luego pasar a ocupar dinamicamente las siguiente filas hacia abajo.
El modelo de flex se pone en el elemento padre y afecta a los hijos, respeta las propiedades de los hijos siempre que estos quepan en pantalla, sino realiza un ajuste.
flex-direction: column; Realiza una disposición de los elementos en columna (también se puede usar row para filas).
flex-shrink: Propiedad de los hijos (padres con display:flex) que impide que se les modifique el ancho, son valores entre 0 (nada encogible) o 1(muy encogible).
flex-wrap: nowrap;Propiedad del elemento padre(por defecto) que impide que los elementos caigan cuando se acaba el espacio de pantalla (genera scroll en pantalla).
flex-wrap: wrap;Propiedad del elemento padre(por defecto) que permite que los elementos caigan cuando se el ancho de la pantalla.
Flexbox se refiere al tipo de display en css que permite un manejo flexible de la alineación, dimensionamiento y distribución de elementos html.
Esta propiedad se aplica a un elemento padre, pero va a afectar principalmente a sus elementos hijos directos. Por defecto, los elementos internos quedan alineados unos seguidos de los otros. El comportamiento del modelo de caja de estos elementos hijos también se ha modificado, ya que pierden el efecto de su propiedad margin.
Los elementos hijos de un padre con propiedad display: flex tienen a su disposición algunas nuevas propiedades que aportan mayor flexibilidad a su comportamiento. Una de estas propiedades es flex-shrink que, junto a la propiedad flex-wrap del padre, permite adaptar y distribuir los elementos de manera dinámica en el espacio horizontal disponible hasta ocupar todo el espacio, y luego pasar a ocupar dinamicamente las siguiente filas hacia abajo.
flex-flow: column wrap;Combinación entre flex-shrink y flex-wrap: Modifica si se quiere vertical y con caida.
https://css-tricks.com/snippets/css/a-guide-to-flexbox/
El margin Colapsing ya no es válido cuando se usa flexbox (los margenes se suman).
justify-content: Tipo de jsutificación de contenido.
justify-content: flex-start; flex-start: para alinear todos los elementos hacia el inicio del espacio disponible.
justify-content: flex-end; flex-end: para alinear todos los elementos hacia el final, a la derecha.
justify-content: center; center: para alinear todos los elementos al centro del espacio disponible.
justify-content: space-between; space-between: para distribuir los elementos con un espacio proporcional e igual entre ellos.
justify-content: space-evenly; space-evenly: para distribuir los elementos con un espacio proporcional e igual entre ellos (incluyendo el primer y último elementos con respecto a los extremos del espacio disponible).
justify-content: space-around; space-around: similar a space-evenly pero tanto en el primero como en el último elemento, el espacio hacia los extremos es la mitad del espacio usado entre los elementos.
Similar a como sucede con justify-content, es posible alinear y distribuir los elementos internos en el espacio vertical disponible usando la propiedad align-items, que puede tomar también los valores de: flex-start, flex-end y center.
align-items center; center: para alinear todos los elementos al centro vertical del espacio disponible (si flex-direction está en row, en column se invierte).
Algo que es muy importante y se debe tener en cuenta a la hora de usar align-items y justify-content es que dependiendo de la propiedad flex-direction que se haya definido, el efecto de ambos se invierte, no en cuanto a sus elementos internos, sino en cuanto a si se debe usar uno u otro de manera vertical u horizontal.
IMPORTANTE: Cuando la propiedad flex-direction se ha definido como column, la propiedad justify-content ya no va a aplicar sobre la alineación horizontal, sino sobre la vertical. Y align-items ya no aplicaría sobre la alineación vertical sino la horizontal. Se intercambian sus efectos.
Para centrar completamente los elementos internos de manera vertical y horizontal en su elemento padre, debemos usar el valor center en ambas propiedades.
justify-self: flex-start;Rompe la propiedad impuesta (horizontal) por el padre ajustandose a la posición deseada.
align-self: flex-start;Rompe la propiedad impuesta (vertical) por el padre ajustandose a la posición deseada.
