/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package led2;

import gnu.io.CommPortIdentifier;
import gnu.io.SerialPort;
import java.io.IOException;
import java.io.OutputStream;
import java.util.Enumeration;

import javax.swing.JOptionPane;

public class led extends javax.swing.JFrame {

    /**
     * Creates new form led
     */
    public led() {
        initComponents();
       
        MetodoConexion();
    }

    private OutputStream salidadatos=null;
    SerialPort puertoserial;
    String puertoquemarcaelarduino="COM6";
    int TIMEOUT=2000; //Milisegundos
    int DATA_RATE=9600;

   
    
    public void MetodoConexion(){
        CommPortIdentifier puertoencontrado=null;
        
        Enumeration enumeracionpuerto=CommPortIdentifier.getPortIdentifiers();//ahora vamos a obtener la enumeracion de los puertos que tengamos
        
        while(enumeracionpuerto.hasMoreElements()){
            CommPortIdentifier auxpuerto=(CommPortIdentifier) enumeracionpuerto.nextElement();
            System.out.println(auxpuerto.getName());
            if(puertoquemarcaelarduino.equals(auxpuerto.getName())){
                System.out.println("Puerto Encontrado");
                puertoencontrado=auxpuerto;
                break;
                }
            }
        
        if(puertoencontrado==null){
            System.out.println("Puerto " +puertoquemarcaelarduino+ " no encontrado");
            muestraerrorconexion("No se encontro el puerto");
            System.exit(ERROR);
            }
        else{
        try{
            puertoserial = (SerialPort) puertoencontrado.open(this.getClass().getName(), TIMEOUT);//abrir el puerto serie
            puertoserial.setSerialPortParams(DATA_RATE, SerialPort.DATABITS_8, SerialPort.STOPBITS_1, SerialPort.PARITY_NONE);
            salidadatos = puertoserial.getOutputStream();
            System.out.println("Conexion exitosa");
            } catch(Exception variableexcepcion){
                puertoserial.close();
                System.out.println("Error al abrir puerto");
                //muestraerrorconexion(variableexcepcion.getMessage());
                System.exit(ERROR);
                }
        }
    }    
    private void enviarDatos(String datos){
        try {
           
            salidadatos.write(datos.getBytes());
           
        } catch (IOException ex) {
          
             muestraerrorconexion(ex.getMessage());
                System.exit(ERROR);
        }
        }        
    public void muestraerrorconexion(String mensaje){
        JOptionPane.showMessageDialog(rootPane, mensaje);
        }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("prender");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("apagar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addComponent(jButton1)
                .addGap(79, 79, 79)
                .addComponent(jButton2)
                .addContainerGap(92, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(34, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        enviarDatos(1+"");
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
           enviarDatos(""+0);
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(led.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(led.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(led.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(led.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new led().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    // End of variables declaration//GEN-END:variables
}