Las bases de datos NoSQL tienen 4 grandes familias: Key Value Stores, basadas en grafos, columnares y basadas en documentos.
    Key Value Stores: Guardan la información en formato de llaves y valores. Las usamos para guardar cache, información de sesión de los usuarios o cosas muy sencillas. Son muy rápidas de consultar pero no podemos usarlas en casos más complejos donde necesitamos estructuras más especiales. El mejor ejemplo de estas bases de datos es Redis.
    Graph Databases: Bases de datos basadas en Grafos. Nos permiten establecer conexiones entre nuestras entidades para realizar consultas de una forma más eficiente que en bases de datos relacionales (así como Twitter o Medium donde cada publicación tiene diferentes relaciones entre sus usuarios, likes, etc). Por ejemplo: Neo4j o JanusGraph.
    Wide-column Stores: Bases de datos columnares. Tienen una llave de fila y otra de columnas para hacer consultas muy rápidas y guardar grandes cantidades de información pero modelar los datos se puede volver un poco complicado. Las usamos en Big Data, IoT, sistemas de recomendaciones, entre otras. Por ejemplo: Cassandra o HBase.
    Document Databases: Bases de datos basadas en documentos. Nos permiten guardar documentos dentro de colecciones, tiene muy buena performance y flexibilidad que nos permite modelar casos de la vida real de forma sencilla y efectiva. Por ejemplo: MongoDB o CouchBase.
MongoDB es una base de datos gratis y de código abierto No Relacional basada en documentos que nos permite guardar una gran cantidad de documentos de forma distribuida. Mongo también es el nombre de la compañía que desarrolla el código de esta base de datos.
Una de sus principales características es que nos permite guardar nuestras estructuras o documentos en formato JSON (no exactamente JSON, pero si algo muy parecido BSON) para tener una gran flexibilidad a la hora de modelar situaciones de la vida real.
Por ser una base de datos distribuida podemos hablar no de uno sino de varios servidores, lo que conocemos como el Cluster de MongoDB. Gracias a esto obtenemos una gran escalabilidad de forma horizontal (escalabilidad en cantidad de servidores).
MongoDB es “Schema Less” lo que permite que nuestros documentos tengan estructuras diferentes sin afectar su funcionamiento, algo que no podemos hacer con las tablas de las bases de datos relacionales. Su lenguaje para realizar queries, índices y agregaciones es muy expresivo.
MongoDB tiene versión community, Enterprise y Atlas(Cloud).
MongoDB Compass es el entorno gráfico de MongoDB.
Conectores son las librerías dentro de los proyectos para comunicarse con MongoDB.
Tenemos varios proveedores que nos permiten utilizar o alquilar MongoDB como servicio y en este caso vamos a usar MongoDB Atlas por ser desarrollado por las mismas personas que desarrollan MongoDB.
MongoDB Atlas tiene las siguientes características:
Aprovisionamiento automático de clusters con MongoDB
Alta disponibilidad
Altamente escalable
Seguro
Disponible en AWS, GCP y Microsoft Azure
Fácil monitoreo y optimización
Para crear nuestro cluster de base de datos debemos ir a mongodb atlas y ahi seleccionar las distintas opciones.
Se debe crear el cluster, un usuario y agregar la ip válida a la lista blanca.
https://www.mongodb.com/cloud/atlas
Con la instalación de MongoDB community nos permite tener MongoDB, la consola de MongoDB y MongoDB compass.
Se accede a C:\Program Files\MongoDB\Server\4.4\bin\mongo.exe para correr el servidor de mongo.
Dentro del servidor se pueden ejecutar los comandos de mongo.
Para conectarse con el cluster de mongo atlas se selecciona en connect y ahi se selecciona si se quiere conectar por compass o por consola, para cualquier caso solo basta con copiar la cadena y correrla ya sea en la GUI o en la consola (con carpeta de bin de Mongo).
Si el lenguaje es Orientado a Objetos de inicio transversal a la mayoría de lenguajes
    -Crea conexión. una instancia de MongoClient, recibe la dirección donde se encuentra la BD.
    -Obtener la BD. Se crea una instancia de MongoDatabase donde se pasará el parámetro el nombre de la BD donde se realizará las operaciones.
    -Acceder a una colección. Pasará el nombre de la colección donde se guardarán los documentos y a partir de MongoCollection permitirá hacer operaciones CRUD sobre nuestra BD.